 function listCheck()   end  function checkDaduan() return true; end   function GetSpellCharges(spellid) chargeInfo  = C_Spell.GetSpellCharges(spellid) if(spellinfo==nil)then return 0,0,0,0,0 end return chargeInfo.currentCharges,chargeInfo.maxCharges,chargeInfo.cooldownStartTime,chargeInfo.cooldownDuration,chargeInfo.chargeModRate end    function IsSpellInRange(spellid,unit) if C_Spell.IsSpellInRange(spellid,unit)==true then return 1; else return 0; end end  function GetSpellCount(spellid) return C_Spell.GetSpellCastCount(spellid) end  function InterfaceOptions_AddCategory(a)    if Settings and Settings.RegisterAddOnCategory and Settings.RegisterCanvasLayoutCategory then   local category = Settings.RegisterCanvasLayoutCategory(a, a.name)   fppanel_categoryId = category.ID   end end function InterfaceOptionsFrame_OpenToCategory(a) end  function GetNumAddOns() return C_AddOns.GetNumAddOns() end function GetAddOnInfo(index) return C_AddOns.GetAddOnInfo(index) end function IsUsableSpell(spellid) return C_Spell.IsSpellUsable(spellid) end function GetSpellInfo(spellid) spellinfo = C_Spell.GetSpellInfo(spellid) if(spellinfo==nil)then return 0 end return spellinfo.name,nil,spellinfo.iconID,spellinfo.castTime,spellinfo.minRange,spellinfo.maxRange,spellinfo.spellID,spellinfo.originalIconID end function GetSpellCooldown(spellid) cooldown = C_Spell.GetSpellCooldown(spellid) if(cooldown==nil)then return 0,0,true,1 end return cooldown.startTime,cooldown.duration,cooldown.isEnabled,cooldown.modRate end function UnitBuff(t,id) unitInfo = C_UnitAuras.GetBuffDataByIndex(t,id) if(unitInfo==nil)then return nil; end return  unitInfo.name, unitInfo.icon,unitInfo.applications, unitInfo.dispelName, unitInfo.duration,unitInfo.expirationTime,unitInfo.sourceUnit,unitInfo.isStealable,unitInfo.nameplateShowPersonal,unitInfo.spellId; end function UnitDebuff(t,id) unitInfo = C_UnitAuras.GetDebuffDataByIndex(t,id) if(unitInfo==nil)then return nil; end return  unitInfo.name, unitInfo.icon,unitInfo.applications, unitInfo.dispelName, unitInfo.duration,unitInfo.expirationTime,unitInfo.sourceUnit,unitInfo.isStealable,unitInfo.nameplateShowPersonal,unitInfo.spellId; end    SZ_magic_debuffoff = { '108238',  '282131',  '267037',  '285000',  '282135', '252781', '290573', '257784', '275014', '260703', '265880', '264105', '274991', '296737', '296018', '260703', '303657', '315176', '318788', '318785', '320788', '350542', '350469', '351117', '353929', '229159', '360687', '227404', '365297', '424581', '389179', '374350', '438708', '453286', '446349' } basecodelist = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"   local panel; function CreateShaoziSet()  panel = CreateFrame("FRAME")  panel.name = "�����������  panel.okay = DSZ_OnSave  panel.cancel = DSZ_OnCancel  panel.default  = DSZ_OnDefaults  panel.refresh  = DSZ_OnRefresh  InterfaceOptions_AddCategory(panel)   return panel end   local DSZP_OnRefresh    DSZP_OnRefresh = function(self) if not ppanelInit then   local label = self:CreateFontString(nil, "OVERLAY", "GameFontNormalLarge")   label:SetPoint("TOPLEFT", 16, -16)   label:SetJustifyH("LEFT")   label:SetJustifyV("TOP")   label:SetText( "���������(�����" )       ppanelInit=true end  end  local fppanel; function CreateShaoziFPSet()  fppanel = CreateFrame("FRAME")  fppanel.name = "�����������  fppanel.okay = DSZP_OnSave  fppanel.cancel = DSZP_OnCancel  fppanel.default  = DSZP_OnDefaults  fppanel.refresh  = DSZP_OnRefresh  InterfaceOptions_AddCategory(fppanel)   return fppanel end  CreateShaoziFPSet() 
